@model MVCAssignments.ViewModels.GuessGameViewModel

@{
    ViewData["Title"] = "Guess Game";
}

<div class="d-flex justify-content-center align-items-center">
    <div class="card shadow-sm" style="width: 28rem; height: 20rem;">
        <div class="card-body">
            <h5 class="card-title text-center mb-4">Guess Game(You have won: @Model.Counter time(s))</h5>
            <form method="post">
                <div class="mb-3">
                    <label asp-for="GuessGame.Value" class="form-label">Enter Your Number (1 - 99):</label>
                    <input type="number" asp-for="GuessGame.Value" class="form-control" step="0.1" placeholder=" " required />
                </div>
                <div class="d-flex flex-column gap-2">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a asp-controller="GuessGame" asp-action="Index" class="btn btn-secondary">Start New Game</a>
                </div>
                @if (!string.IsNullOrEmpty(Model.GuessGame.Message) && ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-info mt-3 text-center" id="messageAlert" style="display: none;">
                        @Model.GuessGame.Message
                    </div>
                }
                else if (!ViewData.ModelState.IsValid)
                {
                    <div id="messageAlert" class="alert alert-danger mt-3 text-center">
                        Please correct your input and try again.
                    </div>
                }
                </form>
        </div>
    </div>
   
    @section Scripts {
        <script>
           document.addEventListener("DOMContentLoaded", function () {
               const alert = document.getElementById("messageAlert");
               if (alert) {
                   $(alert).fadeIn("slow");
               }
           });
       </script>
    }
    
</div>